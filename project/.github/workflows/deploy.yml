name: Deploy to Netlify

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: project/package-lock.json
        
    - name: Install dependencies
      run: |
        cd project
        npm ci
        
    - name: Run linting
      run: |
        cd project
        npm run lint
        
    - name: Build project
      run: |
        cd project
        npm run build
        
    - name: Deploy to Netlify (Production)
      if: github.ref == 'refs/heads/main'
      uses: netlify/actions/cli@master
      with:
        args: deploy --prod --dir=project/dist
      env:
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        
    - name: Deploy to Netlify (Preview)
      if: github.ref != 'refs/heads/main'
      uses: netlify/actions/cli@master
      with:
        args: deploy --dir=project/dist
      env:
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        
    - name: Comment PR with preview URL
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'ðŸš€ Preview deployment ready! Check out the changes at the preview URL.'
          })

  lighthouse:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        configPath: './project/lighthouserc.json'
        uploadArtifacts: true
        temporaryPublicStorage: true

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: project/package-lock.json
        
    - name: Install dependencies
      run: |
        cd project
        npm ci
        
    - name: Run security audit
      run: |
        cd project
        npm audit --audit-level=moderate
        
    - name: Check for vulnerabilities
      run: |
        cd project
        npx audit-ci --moderate